---
import Layout from "../layouts/Layout.astro";
---

<Layout showNavbar={true}>
  <h1>Explore Culinary Insights</h1>

  <div class="search-container">
    <input
      id="search-input"
      type="text"
      placeholder="Search by name or ID..."
      aria-label="Search recipes"
    />
    <button id="search-btn" class="search-btn">Search</button>
  </div>
  <div id="recipes-container" class="recipes-grid"></div>

  <script>
    declare global {
      interface Window {
        viewRecipe: (id: string, isCustom?: boolean) => void;
        fetchRecipes: (query?: string) => void;
        showmyRecipes: () => void;
      }
    }

    interface Recipe {
      id: string;
      title: string;
      image: string;
    }

    async function showmyRecipes() {
      const container = document.getElementById("recipes-container");

      if (!container) {
        console.error("Error: 'recipes-container' no encontrado en el DOM.");
        return;
      }

      try {
        const apiRes = await fetch(
          `https://www.themealdb.com/api/json/v1/1/search.php?s=`,
        );
        const apiData = await apiRes.json();

        const backendRes = await fetch(`http://localhost:3500/recipes`);
        const backendData = await backendRes.json();

        console.log("API Data:", apiData);
        console.log("Backend Data:", backendData);

        const allRecipes = [
          ...(apiData.meals || []).map(
            (meal: any) => `
                    <div class="recipe-card">
                        <img src="${meal.strMealThumb}" alt="${meal.strMeal}" width="200">
                        <h3>${meal.strMeal}</h3>
                        <a href="#" onclick="window.viewRecipe('${meal.idMeal}', false)">See Complete Recipe</a>
                    </div>
                `,
          ),
          ...(backendData || []).map(
            (recipe: Recipe) => `
                    <div class="recipe-card">
                        <img src="${recipe.image}" alt="${recipe.title}" width="200">
                        <h3>${recipe.title}</h3>
                        <a href="#" onclick="window.viewRecipe('${recipe.id}', true)">See Complete Recipe</a>
                    </div>
                `,
          ),
        ].join("");

        container.innerHTML =
          allRecipes || `<p>No recipes found. Try a different search!</p>`;
      } catch (error) {
        console.error("Error fetching recipes:", error);
        container.innerHTML = `<p>Failed to load recipes. Please try again later.</p>`;
      }
    }

    async function fetchRecipes(query = "") {
      const container = document.getElementById("recipes-container");

      if (!container) {
        console.error("Error: 'recipes-container' no encontrado en el DOM.");
        return;
      }

      try {
        const backendRes = await fetch(
          `http://localhost:3500/recipes/search?q=${encodeURIComponent(query)}`,
        );
        const backendData = await backendRes.json();

        console.log("Resultados del backend:", backendData);

        const recipes = backendData
          .map(
            (recipe: Recipe) => `
                <div class="recipe-card">
                    <img src="${recipe.image}" alt="${recipe.title}" width="200">
                    <h3>${recipe.title}</h3>
                    <a href="#" onclick="window.viewRecipe('${recipe.id}', true)">See Complete Recipe</a>
                </div>
            `,
          )
          .join("");

        container.innerHTML =
          recipes || `<p>No recipes found. Try a different search!</p>`;
      } catch (error) {
        console.error("Error fetching recipes:", error);
        container.innerHTML = `<p>Failed to load recipes. Please try again later.</p>`;
      }
    }

    window.fetchRecipes = fetchRecipes;
    window.showmyRecipes = showmyRecipes;

    document.getElementById("search-btn")?.addEventListener("click", () => {
      const searchInput = document.getElementById(
        "search-input",
      ) as HTMLInputElement | null;

      if (!searchInput || !searchInput.value.trim()) {
        alert("Please enter a search term.");
        return;
      }

      const query = searchInput.value.trim();
      window.fetchRecipes(query);
    });

    document.addEventListener("DOMContentLoaded", async () => {
      await showmyRecipes();
    });

    window.viewRecipe = (id, isCustom = false) => {
      console.log("ID recibido en viewRecipe:", id);
      const basePath = isCustom ? `/${id}` : `/${id}`;
      window.location.href = basePath;
    };
  </script>

  <style>
    .search-container {
      display: flex;
      justify-content: center;
      align-items: center;
      margin-bottom: 20px;
    }

    #search-input {
      width: 100%;
      max-width: 400px;
      border: 2px solid #ffb703;
      border-radius: 30px;
      padding: 12px 20px;
      outline: none;
      font-size: 1rem;
    }

    .search-btn {
      background-color: #ffb703;
      border: none;
      border-radius: 30px;
      padding: 10px 20px;
      color: #fff;
      cursor: pointer;
      margin-left: 10px;
      font-size: 1rem;
    }

    .recipes-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
      gap: 20px;
      margin-top: 20px;
    }

    .recipe-card {
      background: #fff;
      border-radius: 12px;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
      padding: 10px;
      text-align: center;
    }

    .recipe-card img {
      border-radius: 8px;
      max-width: 100%;
    }

    .recipe-card a {
      display: inline-block;
      margin-top: 10px;
      background-color: #fb8500;
      color: #fff;
      padding: 8px 16px;
      border-radius: 8px;
      text-decoration: none;
      font-weight: bold;
      transition: background-color 0.3s ease;
    }

    .recipe-card a:hover {
      background-color: #ffb703;
    }
  </style>
</Layout>
