---
import Layout from "../layouts/Layout.astro";
---

<Layout showNavbar={true}>
  <h1>User Profile</h1>
  <div id="user-info" class="user-info">
    <h2>Profile Information</h2>
    <p><strong>Username:</strong> <span id="username"></span></p>
    <p><strong>First Name:</strong> <span id="firstname"></span></p>
    <p><strong>Last Name:</strong> <span id="lastname"></span></p>
  </div>

  <div class="recipe-form-container">
    <h2>Add a New Recipe</h2>
    <form id="add-recipe-form">
      <label for="title">Title:</label>
      <input type="text" id="title" name="title" required />

      <label for="description">Description:</label>
      <textarea id="description" name="description" required></textarea>

      <label for="ingredients">Ingredients (comma separated):</label>
      <input type="text" id="ingredients" name="ingredients" required />

      <label for="instructions">Instructions:</label>
      <textarea id="instructions" name="instructions" required></textarea>

      <label for="category">Category:</label>
      <input type="text" id="category" name="category" required />

      <label for="image">Image URL:</label>
      <input type="url" id="image" name="image" />

      <button type="submit">Add Recipe</button>
    </form>
  </div>

  <script>
    async function fetchUserInfo() {
      try {
        const response = await fetch("http://localhost:3500/users/check-auth", {
          method: "GET",
          credentials: "include",
        });

        const data = await response.json();

        if (response.ok) {
          const usernameElement = document.getElementById(
            "username",
          ) as HTMLSpanElement | null;
          const firstnameElement = document.getElementById(
            "firstname",
          ) as HTMLSpanElement | null;
          const lastnameElement = document.getElementById(
            "lastname",
          ) as HTMLSpanElement | null;

          if (usernameElement) usernameElement.textContent = data.username;
          if (firstnameElement) firstnameElement.textContent = data.firstname;
          if (lastnameElement) lastnameElement.textContent = data.lastname;
        } else {
          alert(`Error: ${data.error}`);
        }
      } catch (error) {
        console.error("Error fetching user info:", error);
        alert("Failed to load user data.");
      }
    }

    document.addEventListener("DOMContentLoaded", fetchUserInfo);

    document
      .getElementById("add-recipe-form")
      ?.addEventListener("submit", async (e) => {
        e.preventDefault();

        const title = document.getElementById(
          "title",
        ) as HTMLInputElement | null;
        const description = document.getElementById(
          "description",
        ) as HTMLTextAreaElement | null;
        const ingredients = document.getElementById(
          "ingredients",
        ) as HTMLInputElement | null;
        const instructions = document.getElementById(
          "instructions",
        ) as HTMLTextAreaElement | null;
        const category = document.getElementById(
          "category",
        ) as HTMLInputElement | null;
        const image = document.getElementById(
          "image",
        ) as HTMLInputElement | null;

        if (
          !title ||
          !description ||
          !ingredients ||
          !instructions ||
          !category
        ) {
          alert("Please fill out all required fields.");
          return;
        }

        const recipeData = {
          title: title.value,
          description: description.value,
          ingredients: ingredients.value.split(",").map((ing) => ing.trim()),
          instructions: instructions.value,
          category: category.value,
          image: image?.value || "",
        };

        try {
          const response = await fetch("http://localhost:3500/recipes", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(recipeData),
          });

          const data = await response.json();

          if (response.ok) {
            alert("Recipe added successfully!");
            window.location.href = "/homerecipes";
          } else {
            alert(`Error: ${data.error}`);
          }
        } catch (error) {
          console.error("Error adding recipe:", error);
          alert("Failed to add recipe. Please try again.");
        }
      });
  </script>

  <style>
    .user-info,
    .recipe-form-container {
      background-color: #fff;
      border: 2px solid #ffb703;
      border-radius: 12px;
      padding: 20px;
      margin-bottom: 20px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .user-info h2,
    .recipe-form-container h2 {
      color: #fb8500;
      text-align: center;
    }

    form {
      display: flex;
      flex-direction: column;
      gap: 10px;
    }

    label {
      font-weight: bold;
    }

    input,
    textarea {
      width: 100%;
      padding: 8px;
      border: 2px solid #ffb703;
      border-radius: 8px;
    }

    button {
      background-color: #fb8500;
      color: #fff;
      border: none;
      border-radius: 8px;
      padding: 10px 20px;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }

    button:hover {
      background-color: #ffb703;
    }
  </style>
</Layout>
